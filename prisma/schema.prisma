generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model PracticaPreProfesionalEnMalla {
  id String @id @default(uuid())

  requiereAutorizacion Boolean

  horas                Int?
  creditos             Float?
  registroDesdeNivelId String?     @unique
  registroDesdeNivel   NivelMalla? @relation(fields: [registroDesdeNivelId], references: [id], onDelete: Cascade)

  registroPracticasAdelantadas Boolean

  mallaCurricularId String          @unique
  mallaCurricular   MallaCurricular @relation(fields: [mallaCurricularId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("practicas_pre_profesionales_mallas")
}

model PracticaComunitariaEnMalla {
  id String @id @default(uuid())

  requiereAutorizacion Boolean

  horas                Int?
  creditos             Float?
  registroDesdeNivelId String?     @unique
  registroDesdeNivel   NivelMalla? @relation(fields: [registroDesdeNivelId], references: [id], onDelete: Cascade)

  registroPracticasAdelantadas Boolean
  registroMultiple             Boolean

  mallaCurricularId String          @unique
  mallaCurricular   MallaCurricular @relation(fields: [mallaCurricularId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("practicas_comunitarias_mallas")
}

model MallaCurricular {
  id     String  @id @default(uuid())
  estado Boolean @default(true)

  tipoDuracion                            TipoDuracion?
  codigo                                  String?
  fechaAprobacion                         DateTime
  fechaLimiteVigencia                     DateTime
  cantidadOtrasMateriasMatricula          Int
  limiteSeleccionMateriaPorAdministrativo Boolean

  cantidadArrastres          Int?
  porcentajeMinimoPasarNivel Int?

  practicaPreProfesional PracticaPreProfesionalEnMalla?
  practicaComunitaria    PracticaComunitariaEnMalla?

  maximoMateriasAdelantar Int?
  automatriculaModulos    Boolean
  plantillasSilabo        Boolean
  modeloPlanificacion     Boolean

  perfilEgreso  String?
  observaciones String?

  tituloObtenidoId String?
  tituloObtenido   TituloObtenido? @relation(fields: [tituloObtenidoId], references: [id])

  modalidadId String
  modalidad   Modalidad @relation(fields: [modalidadId], references: [id])
  programaId  String
  programa    Programa  @relation(fields: [programaId], references: [id])

  lugaresEjecucion LugarEjecucion[]
  niveles          NivelMalla[]
  modulos          AsignaturaModuloEnMalla[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("mallas_curriculares")
}

model AsignaturaEnNivelMalla {
  id String @id @default(uuid())

  tipoAsignatura TipoAsignatura
  identificacion String

  permiteMatriculacion Boolean
  calculoNivel         Boolean
  validaParaCredito    Boolean
  validaParaPromedio   Boolean
  costoEnMatricula     Boolean
  requeridaParaEgresar Boolean
  cantidadMatriculas   Int

  cantidadMatriculasAutorizadas Int?
  minimoCreditosRequeridos      Int?

  maximaCantidadHorasSemanalas Float
  horasColaborativas           Float
  horasAsistidasDocente        Float
  horasAutonomas               Float
  horasPracticas               Float

  sumaHoras               Boolean
  creditos                Float
  horasProyectoIntegrador Float

  noValidaAsistencia                 Boolean
  materiaComun                       Boolean
  guiaPracticaMetodologiaObligatoria Boolean
  aprobarGuiaPracticaMetodologica    Boolean

  descripcion              String?
  objetivoGeneral          String?
  resultadosAprendizaje    String?
  aporteAsignaturaAlPerfil String?
  competenciaGenerica      String?
  objetivosEspecificos     String?
  observaciones            String?

  ejeFormativoId     String
  ejeFormativo       EjeFormativo     @relation(fields: [ejeFormativoId], references: [id])
  nivelMallaId       String
  nivelMalla         NivelMalla       @relation(fields: [nivelMallaId], references: [id])
  asignaturaId       String
  asignatura         Asignatura       @relation(fields: [asignaturaId], references: [id])
  areaConocimientoId String
  areaConocimiento   AreaConocimiento @relation(fields: [areaConocimientoId], references: [id])
  campoFormacionId   String?
  campoFormacion     CampoFormacion?  @relation(fields: [campoFormacionId], references: [id])

  nivelesAcademicos MateriaEnNivelAcademico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("asignaturas_niveles_mallas")
}

model NivelMalla {
  id    String @id @default(uuid())
  nivel Int

  mallaId          String
  malla            MallaCurricular @relation(fields: [mallaId], references: [id], onDelete: Cascade)
  tituloObtenidoId String?
  tituloObtenido   TituloObtenido? @relation(fields: [tituloObtenidoId], references: [id])

  practicaPreProfesional PracticaPreProfesionalEnMalla?
  practicaComunitaria    PracticaComunitariaEnMalla?
  asignaturas            AsignaturaEnNivelMalla[]
  nivelesAcademicos      NivelAcademico[]

  cronogramasMatriculacion CronogramaMatriculacion[]
  requisitosMatriculacion  RequisitoMatriculacion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([nivel, mallaId])
  @@map("niveles_mallas")
}

model AsignaturaModuloEnMalla {
  id String @id @default(uuid())

  tipoAsignatura TipoAsignatura
  identificacion String

  permiteMatriculacion Boolean
  validaParaCredito    Boolean
  validaParaPromedio   Boolean
  costoEnMatricula     Boolean
  requeridaParaGraduar Boolean

  cantidadMatriculas            Int
  cantidadMatriculasAutorizadas Int?
  minimoCreditosRequeridos      Int?

  maximaCantidadHorasSemanalas Float
  horasColaborativas           Float
  horasAsistidasDocente        Float
  horasAutonomas               Float
  horasPracticas               Float

  sumaHoras                          Boolean
  creditos                           Float
  noValidaAsistencia                 Boolean
  materiaGeneral                     Boolean
  guiaPracticaMetodologiaObligatoria Boolean
  aprobarGuiaPracticaMetodologica    Boolean

  competencia              String?
  objetivosEspecificos     String?
  descripcion              String?
  resultados               String?
  aporteAsignaturaAlPerfil String?
  objetivoGeneral          String?

  asignaturaId       String
  asignatura         Asignatura       @relation(fields: [asignaturaId], references: [id])
  areaConocimientoId String
  areaConocimiento   AreaConocimiento @relation(fields: [areaConocimientoId], references: [id])
  campoFormacionId   String
  campoFormacion     CampoFormacion   @relation(fields: [campoFormacionId], references: [id])
  mallaId            String
  malla              MallaCurricular  @relation(fields: [mallaId], references: [id], onDelete: Cascade)

  nivelesAcademicos MateriaEnNivelAcademico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("asignaturas_modulo_mallas")
}

model Sede {
  id        String @id @default(uuid())
  nombre    String
  pais      String
  provincia String
  canton    String
  alias     String

  lugaresEjecucion LugarEjecucion[]
  titulos          Titulo[]
  sesiones         Sesion[]
  coordinaciones   Coordinacion[]
  ubicaciones      Ubicacion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("sedes")
}

model Asignatura {
  id                         String                      @id @default(uuid())
  nombre                     String
  codigo                     String?
  asignaturasEnNivelMalla    AsignaturaEnNivelMalla[]
  asignaturasModuloEnMalla   AsignaturaModuloEnMalla[]
  asignaturasEnVarianteCurso AsignaturaEnVarianteCurso[]
  asignaturasEnCursoEscuela  AsignaturaEnCursoEscuela[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("asignaturas")
}

model AsignaturaEnVarianteCurso {
  id                    String  @id @default(uuid())
  validaCredito         Boolean
  validaPromedio        Boolean
  horasColaborativas    Float
  horasAsistidasDocente Float
  horasAutonomas        Float
  horasPracticas        Float
  creditos              Float
  requeridoAprobar      Boolean
  sumaHoras             Boolean

  asistenciaAprobar Int?
  notaMaxima        Float?
  notaMinima        Float?
  cantidadDecimales Int?

  asignaturaId       String
  asignatura         Asignatura        @relation(fields: [asignaturaId], references: [id])
  varianteCursoId    String
  varianteCurso      VarianteCurso     @relation(fields: [varianteCursoId], references: [id], onDelete: Cascade)
  modeloEvaluativoId String?
  modeloEvaluativo   ModeloEvaluativo? @relation(fields: [modeloEvaluativoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([asignaturaId], map: "asignaturas_en_variantes_curso_asignaturaId_fkey")
  @@index([varianteCursoId], map: "asignaturas_en_variantes_curso_varianteCursoId_fkey")
  @@map("asignaturas_en_variantes_curso")
}

model LugarEjecucion {
  id      String          @id @default(uuid())
  codigo  String?
  mallaId String
  sedeId  String
  sede    Sede            @relation(fields: [sedeId], references: [id])
  malla   MallaCurricular @relation(fields: [mallaId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([sedeId], map: "lugares_ejecucion_sedeId_fkey")
  @@index([mallaId], map: "lugares_ejecucion_mallaId_fkey")
  @@map("lugares_ejecucion")
}

model Titulo {
  id     String @id @default(uuid())
  nombre String

  sedeId String?
  sede   Sede?   @relation(fields: [sedeId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([sedeId], map: "titulos_sedeId_fkey")
  @@map("titulos")
}

model CursoEscuela {
  id     String  @id @default(uuid())
  nombre String
  codigo String?

  paraleloId String
  paralelo   Paralelo @relation(fields: [paraleloId], references: [id])
  sesionId   String
  sesion     Sesion   @relation(fields: [sesionId], references: [id])

  tema                String
  observaciones       String?
  departamento        String?
  fechaInicio         DateTime
  fechaFin            DateTime
  fechaLimiteRegistro DateTime
  diasLimitePago      Int
  nivel               Int
  cupos               Int?
  evaluaProfesor      Boolean
  matriculaConDeuda   Boolean
  legalizarMatriculas Boolean

  registroExterno       Boolean
  registroInterno       Boolean
  verificaSesion        Boolean
  registroDesdeOtraSede Boolean
  edadMinima            Int?
  edadMaxima            Int?
  costoPorMateria       Boolean
  cumpleRequisitosMalla Boolean
  pasarRecord           Boolean

  plantillaId String?
  plantilla   VarianteCurso? @relation(fields: [plantillaId], references: [id])

  asignaturas AsignaturaEnCursoEscuela[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("curso_escuelas")
}

model AsignaturaEnCursoEscuela {
  id String @id @default(uuid())

  validaCredito         Boolean
  validaPromedio        Boolean
  horasColaborativas    Float
  horasAsistidasDocente Float
  horasAutonomas        Float
  horasPracticas        Float
  sumaHoras             Boolean
  creditos              Float
  requeridoAprobar      Boolean

  asistenciaAprobar Int?
  notaMaxima        Float?
  notaMinima        Float?
  cantidadDecimales Int?

  asignaturaId       String
  asignatura         Asignatura        @relation(fields: [asignaturaId], references: [id])
  cursoEscuelaId     String
  cursoEscuela       CursoEscuela      @relation(fields: [cursoEscuelaId], references: [id], onDelete: Cascade)
  profesorId         String?
  profesor           User?             @relation(fields: [profesorId], references: [id])
  modeloEvaluativoId String?
  modeloEvaluativo   ModeloEvaluativo? @relation(fields: [modeloEvaluativoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("asignatura_en_curso_escuela")
}

model Paralelo {
  id     String @id @default(uuid())
  nombre String
  orden  Int

  cursoEscuelas     CursoEscuela[]
  nivelesAcademicos NivelAcademico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("paralelos")
}

model Curso {
  id        String          @id @default(uuid())
  estado    Boolean         @default(true)
  nombre    String
  variantes VarianteCurso[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("cursos")
}

model VarianteCurso {
  id          String  @id @default(uuid())
  estado      Boolean @default(false)
  nombre      String
  codigoBase  String
  descripcion String

  registroExterno         Boolean
  registroInterno         Boolean
  registroDesdeOtraSede   Boolean
  costoPorMateria         Boolean
  costoPorCantidadMateria Boolean
  verificaSesion          Boolean
  edadMinima              Int?
  edadMaxima              Int?
  cumpleRequisitosMalla   Boolean
  fechaAprobacion         DateTime
  pasarRecord             Boolean

  cursoId String
  curso   Curso  @relation(fields: [cursoId], references: [id], onDelete: Cascade)

  asignaturas   AsignaturaEnVarianteCurso[]
  cursoEscuelas CursoEscuela[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([cursoId], map: "variantes_de_cursos_cursoId_fkey")
  @@map("variantes_de_cursos")
}

model Competencia {
  id     String          @id @default(uuid())
  tipo   TipoCompetencia
  nombre String

  programaId String?
  programa   Programa? @relation(fields: [programaId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("competencias")
}

model EjeFormativo {
  id                      String                   @id @default(uuid())
  nombre                  String
  asignaturasEnNivelMalla AsignaturaEnNivelMalla[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("ejes_formativos")
}

model AreaConocimiento {
  id                       String                    @id @default(uuid())
  nombre                   String
  codigo                   String?
  asignaturasEnNivelMalla  AsignaturaEnNivelMalla[]
  asignaturasModuloEnMalla AsignaturaModuloEnMalla[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("areas_de_conocimiento")
}

model CampoFormacion {
  id                       String                    @id @default(uuid())
  nombre                   String
  asignaturasEnNivelMalla  AsignaturaEnNivelMalla[]
  asignaturasModuloEnMalla AsignaturaModuloEnMalla[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("campos_de_formacion")
}

model ModeloContrato {
  id             String  @id @default(uuid())
  estado         Boolean
  nombre         String
  descripcion    String
  paraProfesores Boolean
  archivoUrl     String  @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("modelos_contrato")
}

model Grupo {
  nombre String @id

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("grupos")
}

model Modalidad {
  id     String  @id @default(uuid())
  nombre String
  alias  String?

  mallas MallaCurricular[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("modalidades")
}

model Turno {
  id       String   @id @default(uuid())
  estado   Boolean  @default(false)
  horas    Float
  comienza DateTime @db.Time(0)
  termina  DateTime @db.Time(0)

  sesionId String
  sesion   Sesion @relation(fields: [sesionId], references: [id])

  materiasEnHorario MateriaEnHorario[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("turnos")
}

model AlternativaEvaluacion {
  id     String @id @default(uuid())
  nombre String
  codigo String

  camposModeloEvaluativo CampoModeloEvaluativo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("alternativas_evaluacion")
}

model CampoModeloEvaluativo {
  id                      String  @id @default(uuid())
  codigo                  String
  ordenActa               Int
  notaMaxima              Float
  notaMinima              Float
  decimales               Int
  campoDependiente        Boolean
  actualizaEstado         Boolean
  actualizaEstadoNegativo Boolean
  determinaEstadoFinal    Boolean
  defineMaximos           Boolean

  alternativaId      String
  alternativa        AlternativaEvaluacion @relation(fields: [alternativaId], references: [id])
  modeloEvaluativoId String
  modeloEvaluativo   ModeloEvaluativo      @relation(fields: [modeloEvaluativoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("campos_modelo_evaluativo")
}

model ModeloEvaluativo {
  id                              String  @id @default(uuid())
  estado                          Boolean @default(false)
  nombre                          String
  notaMaxima                      Float
  notaAprobatoria                 Float
  notaRecuperacion                Float
  porcentajeAsistenciaAprobatoria Int
  decimalesNotaFinal              Int
  defineMaximos                   Boolean
  camposActualizanEstado          Boolean
  observaciones                   String?

  campos                     CampoModeloEvaluativo[]
  asignaturasEnVarianteCurso AsignaturaEnVarianteCurso[]
  asignaturasEnCursoEscuela  AsignaturaEnCursoEscuela[]
  nivelesAcademicos          NivelAcademico[]
  materiasNivelesAcademicos  MateriaEnNivelAcademico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("modelos_evaluativos")
}

model ModeloNivelacion {
  id                 String  @id @default(uuid())
  estado             Boolean @default(false)
  nombre             String
  notaMaxima         Float
  notaAprobatoria    Float
  decimalesNotaFinal Int
  observaciones      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("modelos_nivelacion")
}

model CampoProyectoIntegrador {
  id                   String  @id @default(uuid())
  nombre               String
  codigo               String
  observaciones        String?
  ordenActa            Int
  notaMaxima           Float
  notaMinima           Float
  decimales            Int
  campoDependiente     Boolean
  actualizaEstado      Boolean
  determinaEstadoFinal Boolean

  proyectoIntegradorId String
  proyectoIntegrador   ProyectoIntegrador @relation(fields: [proyectoIntegradorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("campos_proyectos_integradores")
}

model ProyectoIntegrador {
  id                 String  @id @default(uuid())
  estado             Boolean @default(false)
  nombre             String
  notaMaxima         Float
  notaAprobatoria    Float
  decimalesNotaFinal Int
  observaciones      String?

  campos CampoProyectoIntegrador[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("proyectos_integradores")
}

model Sesion {
  id     String  @id @default(uuid())
  estado Boolean @default(false)
  nombre String
  alias  String

  sedeId String
  sede   Sede   @relation(fields: [sedeId], references: [id])

  lunes     Boolean
  martes    Boolean
  miercoles Boolean
  jueves    Boolean
  viernes   Boolean
  sabado    Boolean
  domingo   Boolean

  cursoEscuelas     CursoEscuela[]
  turnos            Turno[]
  nivelesAcademicos NivelAcademico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("sesiones")
}

model Recurso {
  id     String @id @default(uuid())
  nombre String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("recursos")
}

model MetodologiaAprendizaje {
  id     String @id @default(uuid())
  nombre String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("metodologias_aprendizaje")
}

model PerfilPractica {
  id          String  @id @default(uuid())
  nombre      String
  capacidades String?
  resultados  String?
  actividades String?

  perfilesPracticaProgramas PerfilPracticaEnPrograma[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("perfiles_practica")
}

model PerfilPracticaEnPrograma {
  perfilPracticaId String
  perfilPractica   PerfilPractica @relation(fields: [perfilPracticaId], references: [id])
  programaId       String
  programa         Programa       @relation(fields: [programaId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@id([perfilPracticaId, programaId])
  @@map("perfiles_practica_programas")
}

model ProductoAcreditableEvaluacion {
  id     String @id @default(uuid())
  nombre String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("productos_acreditables_evaluacion")
}

model TipoDocumento {
  id                String  @id @default(uuid())
  nombre            String
  titulo            Boolean
  actaGrado         Boolean
  cedula            Boolean
  papeletaVotacion  Boolean
  carnetConadis     Boolean
  convalidacion     Boolean
  partidaNacimiento Boolean
  preNivelacion     Boolean
  serviciosBasicos  Boolean
  examenIngreso     Boolean
  paraPasantia      Boolean

  programas  TipoDocumentoEnPrograma[]
  requisitos RequisitoMatriculacion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("tipos_documento")
}

model TipoDocumentoEnPrograma {
  id               String  @id @default(uuid())
  requeridoFisico  Boolean
  requeridoDigital Boolean

  tipoDocumentoId String
  tipoDocumento   TipoDocumento @relation(fields: [tipoDocumentoId], references: [id])
  programaId      String
  programa        Programa      @relation(fields: [programaId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("tipo_documento_programa")
}

model NivelTitulacion {
  id       String                   @id @default(uuid())
  nombre   String
  detalles DetalleNivelTitulacion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("niveles_titulacion")
}

model DetalleNivelTitulacion {
  id     String @id @default(uuid())
  nombre String

  programas Programa[]

  nivelTitulacionId String
  nivelTitulacion   NivelTitulacion @relation(fields: [nivelTitulacionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("detalles_niveles_titucion")
}

model TituloObtenido {
  id     String @id @default(uuid())
  nombre String

  programaId String
  programa   Programa @relation(fields: [programaId], references: [id])

  mallasCurriculares MallaCurricular[]
  nivelesMalla       NivelMalla[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("titulos_obtenidos")
}

model Coordinacion {
  id     String @id @default(uuid())
  nombre String
  alias  String

  sedeId String
  sede   Sede   @relation(fields: [sedeId], references: [id])

  programas Programa[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("coordinaciones")
}

model Programa {
  id      String  @id @default(uuid())
  estado  Boolean @default(false)
  nombre  String
  mencion String?
  alias   String

  detalleNivelTitulacionId String
  detalleNivelTitulacion   DetalleNivelTitulacion @relation(fields: [detalleNivelTitulacionId], references: [id])
  coordinacionId           String
  coordinacion             Coordinacion           @relation(fields: [coordinacionId], references: [id])

  competencias              Competencia[]
  perfilesPracticaProgramas PerfilPracticaEnPrograma[]
  titulosObtenidos          TituloObtenido[]
  documentosRequeridos      TipoDocumentoEnPrograma[]
  mallasCurriculares        MallaCurricular[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("programas")
}

model MateriaEnNivelAcademico {
  id     String  @id @default(uuid())
  estado Boolean @default(true)

  numero              Int      @unique @default(autoincrement())
  alias               String?
  materiaExterna      Boolean  @default(false)
  practicasPermitidas Boolean  @default(false)
  validaParaCreditos  Boolean
  validaParaPromedio  Boolean
  sumaHorasProfesor   Boolean  @default(true)
  fechaInicio         DateTime
  fechaFin            DateTime

  asignaturaEnNivelMallaId String?
  asignaturaEnNivelMalla   AsignaturaEnNivelMalla?  @relation(fields: [asignaturaEnNivelMallaId], references: [id])
  nivelAcademicoId         String
  nivelAcademico           NivelAcademico           @relation(fields: [nivelAcademicoId], references: [id], onDelete: Cascade)
  asignaturaModuloId       String?
  asignaturaModulo         AsignaturaModuloEnMalla? @relation(fields: [asignaturaModuloId], references: [id])
  modeloEvaluativoId       String
  modeloEvaluativo         ModeloEvaluativo         @relation(fields: [modeloEvaluativoId], references: [id])

  horario MateriaEnHorario[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([nivelAcademicoId, asignaturaEnNivelMallaId])
  @@unique([nivelAcademicoId, asignaturaModuloId])
  @@index([numero])
  @@map("materias_niveles_academicos")
}

model NivelAcademico {
  id                      String  @id @default(uuid())
  nombre                  String?
  estado                  Boolean @default(true)
  profesores              Boolean @default(true)
  horarios                Boolean @default(true)
  cuposMaterias           Boolean @default(true)
  planificacionProfesores Boolean @default(true)
  matriculacion           Boolean @default(false)

  fechaInicio        DateTime
  fechaFin           DateTime
  inicioAgregaciones DateTime
  limiteAgregaciones DateTime

  validaRequisitosMalla                                Boolean
  validaCumplimientoMaterias                           Boolean
  horasMinimasPracticasComunitarias                    Float?
  horasMinimasPracticasPreprofesionales                Float?
  estudiantesPuedenSeleccionarMaterias                 Boolean
  estudiantesPuedenSeleccionarMateriasOtrosHorarios    Boolean
  estudiantesPuedenSeleccionarMateriasOtrasModalidades Boolean
  estudiantesRegistranProyectosIntegradores            Boolean
  redireccionAPagos                                    Boolean

  limiteOrdinaria          DateTime
  limiteExtraordinaria     DateTime
  limiteEspecial           DateTime
  diasVencimientoMatricula Int
  capacidad                Int

  mensaje             String?
  terminosCondiciones String?

  paraleloId         String
  paralelo           Paralelo         @relation(fields: [paraleloId], references: [id])
  modeloEvaluativoId String
  modeloEvaluativo   ModeloEvaluativo @relation(fields: [modeloEvaluativoId], references: [id])
  sesionId           String
  sesion             Sesion           @relation(fields: [sesionId], references: [id])
  nivelMallaId       String
  nivelMalla         NivelMalla       @relation(fields: [nivelMallaId], references: [id])

  materias MateriaEnNivelAcademico[]
  horario  MateriaEnHorario[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([paraleloId, nivelMallaId, sesionId])
  @@map("niveles_academicos")
}

model MateriaEnHorario {
  id          String   @id @default(uuid())
  dia         Dia
  fechaInicio DateTime
  fechaFin    DateTime

  materiaId        String
  materia          MateriaEnNivelAcademico @relation(fields: [materiaId], references: [id], onDelete: Cascade)
  nivelAcademicoId String
  nivelAcademico   NivelAcademico          @relation(fields: [nivelAcademicoId], references: [id])
  turnoId          String
  turno            Turno                   @relation(fields: [turnoId], references: [id])
  ubicacionId      String
  ubicacion        Ubicacion               @relation(fields: [ubicacionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("horarios")
}

model Ubicacion {
  id             String        @id @default(uuid())
  estado         Boolean       @default(true)
  nombre         String
  tipo           TipoUbicacion
  capacidad      Int
  entornoVirtual Boolean

  sedeId String
  sede   Sede   @relation(fields: [sedeId], references: [id])

  materiasEnHorario MateriaEnHorario[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("ubicaciones")
}

model Corte {
  id     String @id @default(uuid())
  nombre String

  periodos PeriodoLectivo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("cortes")
}

model CalculoCosto {
  id   String           @id @default(uuid())
  tipo TipoCalculoCosto

  costoPorSesion Boolean?

  estudiantesEligenOpcionPago Boolean?
  cronogramaFechasOpcionPago  Boolean?

  periodos PeriodoLectivo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("calculos_costos")
}

model RequisitoMatriculacion {
  id String @id @default(uuid())

  obligatorio      Boolean
  transferenciaIES Boolean
  primeraMatricula Boolean
  repitenMaterias  Boolean

  descripcion String?

  tipoDocumentoId String
  tipoDocumento   TipoDocumento  @relation(fields: [tipoDocumentoId], references: [id])
  periodoId       String
  periodo         PeriodoLectivo @relation(fields: [periodoId], references: [id], onDelete: Cascade)
  nivelId         String
  nivel           NivelMalla     @relation(fields: [nivelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("requisitos_matriculacion")
}

model CronogramaMatriculacion {
  id String @id @default(uuid())

  fechaInicio DateTime
  fechaFin    DateTime

  nivelId   String
  nivel     NivelMalla     @relation(fields: [nivelId], references: [id], onDelete: Cascade)
  periodoId String
  periodo   PeriodoLectivo @relation(fields: [periodoId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("cronogramas_matriculacion")
}

model SubPeriodoLectivo {
  id String @id @default(uuid())

  nombre      String
  fechaInicio DateTime
  fechaFin    DateTime

  periodoId String
  periodo   PeriodoLectivo @relation(fields: [periodoId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("sub_periodos_lectivos")
}

model PeriodoLectivo {
  id         String  @id @default(uuid())
  matriculas Boolean @default(false)
  estado     Boolean @default(true)
  abierto    Boolean @default(true)

  nombre String
  inicio DateTime
  fin    DateTime

  limiteMatriculaOrdinaria                DateTime?
  limiteMatriculaExtraordinaria           DateTime?
  limiteMatriculaEspecial                 DateTime?
  automatriculaAlumnosFechaExtraordinaria Boolean?

  tipo                                      TipoPeriodo
  estudianteSeleccionaParaleloAutomatricula Boolean?
  seImpartioNivelacion                      Boolean
  planificacionCargaHoraria                 Boolean

  planificacionProfesoresFormaTotal Boolean?
  aprobacionPlanificacionProfesores Boolean?

  cronogramaNotasCoordinacion                  Boolean
  legalizacionAutomaticaContraPagos            Boolean?
  puedenMatricularseArrastre                   Boolean
  puedenAutomatricularseSegundasOMasMatriculas Boolean

  numeroSecuencia Int?

  numeroMatriculaAutomatico   Boolean?
  numeroMatricularAlLegalizar Boolean?

  actividadesDocencia                  Boolean @default(true)
  actividadesInvestigacion             Boolean @default(true)
  actividadesGestion                   Boolean @default(true)
  actividadesPracticasComunitarias     Boolean @default(false)
  actividadesPracticasPreprofesionales Boolean @default(false)
  otrasActividades                     Boolean @default(false)

  corteId        String?
  corte          Corte?       @relation(fields: [corteId], references: [id])
  calculoCostoId String
  calculoCosto   CalculoCosto @relation(fields: [calculoCostoId], references: [id])

  requisitosMatriculacion  RequisitoMatriculacion[]
  subPeriodos              SubPeriodoLectivo[]
  cronogramasMatriculacion CronogramaMatriculacion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("periodos_lectivos")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  expires_in        Int?
  ext_expires_in    Int?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId], map: "accounts_userId_fkey")
  @@map("accounts")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "sessions_userId_fkey")
  @@map("sessions")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @db.Text
  accounts      Account[]
  sessions      Session[]

  asignaturasEnCursoEscuelas AsignaturaEnCursoEscuela[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
  @@unique([identifier, token])
  @@map("verification_tokens")
}

enum TipoDuracion {
  HORAS
  SEMESTRES
  CREDITOS
  ANOS

  @@map("tipo_duracion")
}

enum TipoCompetencia {
  ESPECIFICA
  GENERICA

  @@map("tipo_competencia")
}

enum TipoAsignatura {
  PRACTICA
  TEORICA
  TEORICA_PRACTICA

  @@map("tipo_asignatura")
}

enum TipoUbicacion {
  AULA
  LABORATORIO
  TALLER
  SALON

  @@map("tipo_ubicacion")
}

enum Dia {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO

  @@map("dia")
}

enum TipoPeriodo {
  GRADO
  POSGRADO

  @@map("tipo_periodo")
}

enum TipoCalculoCosto {
  COSTO_POR_NIVEL_Y_MATERIAS
  COSTO_POR_PLAN_CUOTA

  @@map("tipo_calculo_costo")
}
