generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model PracticaPreProfesionalEnMalla {
  id                           String          @id @default(uuid())
  requiereAutorizacion         Boolean
  horas                        Int?
  creditos                     Float?
  registroDesdeNivelId         String?         @unique
  registroPracticasAdelantadas Boolean
  mallaCurricularId            String          @unique
  createdAt                    DateTime        @default(now())
  updatedAt                    DateTime        @default(now()) @updatedAt
  mallaCurricular              MallaCurricular @relation(fields: [mallaCurricularId], references: [id], onDelete: Cascade)
  registroDesdeNivel           NivelMalla?     @relation(fields: [registroDesdeNivelId], references: [id], onDelete: Cascade)

  @@map("practicas_pre_profesionales_mallas")
}

model PracticaComunitariaEnMalla {
  id                           String          @id @default(uuid())
  requiereAutorizacion         Boolean
  horas                        Int?
  creditos                     Float?
  registroDesdeNivelId         String?         @unique
  registroPracticasAdelantadas Boolean
  registroMultiple             Boolean
  mallaCurricularId            String          @unique
  createdAt                    DateTime        @default(now())
  updatedAt                    DateTime        @default(now()) @updatedAt
  mallaCurricular              MallaCurricular @relation(fields: [mallaCurricularId], references: [id], onDelete: Cascade)
  registroDesdeNivel           NivelMalla?     @relation(fields: [registroDesdeNivelId], references: [id], onDelete: Cascade)

  @@map("practicas_comunitarias_mallas")
}

model MallaCurricular {
  id                                      String                         @id @default(uuid())
  estado                                  Boolean                        @default(true)
  tipoDuracion                            TipoDuracion?
  codigo                                  String?
  fechaAprobacion                         DateTime
  fechaLimiteVigencia                     DateTime
  cantidadOtrasMateriasMatricula          Int
  limiteSeleccionMateriaPorAdministrativo Boolean
  cantidadArrastres                       Int?
  porcentajeMinimoPasarNivel              Int?
  maximoMateriasAdelantar                 Int?
  automatriculaModulos                    Boolean
  plantillasSilabo                        Boolean
  modeloPlanificacion                     Boolean
  perfilEgreso                            String?
  observaciones                           String?
  tituloObtenidoId                        String?
  modalidadId                             String
  programaId                              String
  createdAt                               DateTime                       @default(now())
  updatedAt                               DateTime                       @default(now()) @updatedAt
  modulos                                 AsignaturaModuloEnMalla[]
  lugaresEjecucion                        LugarEjecucion[]
  modalidad                               Modalidad                      @relation(fields: [modalidadId], references: [id])
  programa                                Programa                       @relation(fields: [programaId], references: [id])
  tituloObtenido                          TituloObtenido?                @relation(fields: [tituloObtenidoId], references: [id])
  niveles                                 NivelMalla[]
  practicaComunitaria                     PracticaComunitariaEnMalla?
  practicaPreProfesional                  PracticaPreProfesionalEnMalla?

  @@index([modalidadId], map: "mallas_curriculares_modalidadId_fkey")
  @@index([programaId], map: "mallas_curriculares_programaId_fkey")
  @@index([tituloObtenidoId], map: "mallas_curriculares_tituloObtenidoId_fkey")
  @@map("mallas_curriculares")
}

model AsignaturaEnNivelMalla {
  id                                 String                    @id @default(uuid())
  tipoAsignatura                     TipoAsignatura
  identificacion                     String
  permiteMatriculacion               Boolean
  calculoNivel                       Boolean
  validaParaCredito                  Boolean
  validaParaPromedio                 Boolean
  costoEnMatricula                   Boolean
  requeridaParaEgresar               Boolean
  cantidadMatriculas                 Int
  cantidadMatriculasAutorizadas      Int?
  minimoCreditosRequeridos           Int?
  maximaCantidadHorasSemanalas       Float
  horasColaborativas                 Float
  horasAsistidasDocente              Float
  horasAutonomas                     Float
  horasPracticas                     Float
  sumaHoras                          Boolean
  creditos                           Float
  horasProyectoIntegrador            Float
  noValidaAsistencia                 Boolean
  materiaComun                       Boolean
  guiaPracticaMetodologiaObligatoria Boolean
  aprobarGuiaPracticaMetodologica    Boolean
  descripcion                        String?
  objetivoGeneral                    String?
  resultadosAprendizaje              String?
  aporteAsignaturaAlPerfil           String?
  competenciaGenerica                String?
  objetivosEspecificos               String?
  observaciones                      String?
  ejeFormativoId                     String
  nivelMallaId                       String
  asignaturaId                       String
  areaConocimientoId                 String
  campoFormacionId                   String?
  createdAt                          DateTime                  @default(now())
  updatedAt                          DateTime                  @default(now()) @updatedAt
  areaConocimiento                   AreaConocimiento          @relation(fields: [areaConocimientoId], references: [id])
  asignatura                         Asignatura                @relation(fields: [asignaturaId], references: [id])
  campoFormacion                     CampoFormacion?           @relation(fields: [campoFormacionId], references: [id])
  ejeFormativo                       EjeFormativo              @relation(fields: [ejeFormativoId], references: [id])
  nivelMalla                         NivelMalla                @relation(fields: [nivelMallaId], references: [id], onDelete: Cascade)
  nivelesAcademicos                  MateriaEnNivelAcademico[]

  @@index([areaConocimientoId], map: "asignaturas_niveles_mallas_areaConocimientoId_fkey")
  @@index([asignaturaId], map: "asignaturas_niveles_mallas_asignaturaId_fkey")
  @@index([campoFormacionId], map: "asignaturas_niveles_mallas_campoFormacionId_fkey")
  @@index([ejeFormativoId], map: "asignaturas_niveles_mallas_ejeFormativoId_fkey")
  @@index([nivelMallaId], map: "asignaturas_niveles_mallas_nivelMallaId_fkey")
  @@map("asignaturas_niveles_mallas")
}

model NivelMalla {
  id                       String                         @id @default(uuid())
  nivel                    Int
  mallaId                  String
  tituloObtenidoId         String?
  createdAt                DateTime                       @default(now())
  updatedAt                DateTime                       @default(now()) @updatedAt
  asignaturas              AsignaturaEnNivelMalla[]
  cronogramasMatriculacion CronogramaMatriculacion[]
  nivelesAcademicos        NivelAcademico[]
  malla                    MallaCurricular                @relation(fields: [mallaId], references: [id], onDelete: Cascade)
  tituloObtenido           TituloObtenido?                @relation(fields: [tituloObtenidoId], references: [id])
  practicaComunitaria      PracticaComunitariaEnMalla?
  practicaPreProfesional   PracticaPreProfesionalEnMalla?
  requisitosMatriculacion  RequisitoMatriculacion[]

  @@unique([nivel, mallaId])
  @@index([mallaId], map: "niveles_mallas_mallaId_fkey")
  @@index([tituloObtenidoId], map: "niveles_mallas_tituloObtenidoId_fkey")
  @@map("niveles_mallas")
}

model AsignaturaModuloEnMalla {
  id                                 String                    @id @default(uuid())
  tipoAsignatura                     TipoAsignatura
  identificacion                     String
  permiteMatriculacion               Boolean
  validaParaCredito                  Boolean
  validaParaPromedio                 Boolean
  costoEnMatricula                   Boolean
  requeridaParaGraduar               Boolean
  cantidadMatriculas                 Int
  cantidadMatriculasAutorizadas      Int?
  minimoCreditosRequeridos           Int?
  maximaCantidadHorasSemanalas       Float
  horasColaborativas                 Float
  horasAsistidasDocente              Float
  horasAutonomas                     Float
  horasPracticas                     Float
  sumaHoras                          Boolean
  creditos                           Float
  noValidaAsistencia                 Boolean
  materiaGeneral                     Boolean
  guiaPracticaMetodologiaObligatoria Boolean
  aprobarGuiaPracticaMetodologica    Boolean
  competencia                        String?
  objetivosEspecificos               String?
  descripcion                        String?
  resultados                         String?
  aporteAsignaturaAlPerfil           String?
  objetivoGeneral                    String?
  asignaturaId                       String
  areaConocimientoId                 String
  campoFormacionId                   String
  mallaId                            String
  createdAt                          DateTime                  @default(now())
  updatedAt                          DateTime                  @default(now()) @updatedAt
  areaConocimiento                   AreaConocimiento          @relation(fields: [areaConocimientoId], references: [id])
  asignatura                         Asignatura                @relation(fields: [asignaturaId], references: [id])
  campoFormacion                     CampoFormacion            @relation(fields: [campoFormacionId], references: [id])
  malla                              MallaCurricular           @relation(fields: [mallaId], references: [id], onDelete: Cascade)
  nivelesAcademicos                  MateriaEnNivelAcademico[]

  @@index([areaConocimientoId], map: "asignaturas_modulo_mallas_areaConocimientoId_fkey")
  @@index([asignaturaId], map: "asignaturas_modulo_mallas_asignaturaId_fkey")
  @@index([campoFormacionId], map: "asignaturas_modulo_mallas_campoFormacionId_fkey")
  @@index([mallaId], map: "asignaturas_modulo_mallas_mallaId_fkey")
  @@map("asignaturas_modulo_mallas")
}

model Sede {
  id               String           @id @default(uuid())
  nombre           String
  pais             String
  provincia        String
  canton           String
  alias            String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now()) @updatedAt
  administrativos  Administrativo[]
  coordinaciones   Coordinacion[]
  lugaresEjecucion LugarEjecucion[]
  sesiones         Sesion[]
  titulos          Titulo[]
  ubicaciones      Ubicacion[]

  @@map("sedes")
}

model Asignatura {
  id                         String                      @id @default(uuid())
  nombre                     String
  codigo                     String?
  createdAt                  DateTime                    @default(now())
  updatedAt                  DateTime                    @default(now()) @updatedAt
  asignaturasEnCursoEscuela  AsignaturaEnCursoEscuela[]
  asignaturasEnVarianteCurso AsignaturaEnVarianteCurso[]
  asignaturasModuloEnMalla   AsignaturaModuloEnMalla[]
  asignaturasEnNivelMalla    AsignaturaEnNivelMalla[]

  @@map("asignaturas")
}

model AsignaturaEnVarianteCurso {
  id                    String            @id @default(uuid())
  validaCredito         Boolean
  validaPromedio        Boolean
  horasColaborativas    Float
  horasAsistidasDocente Float
  horasAutonomas        Float
  horasPracticas        Float
  creditos              Float
  requeridoAprobar      Boolean
  sumaHoras             Boolean
  asistenciaAprobar     Int?
  notaMaxima            Float?
  notaMinima            Float?
  cantidadDecimales     Int?
  asignaturaId          String
  varianteCursoId       String
  modeloEvaluativoId    String?
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @default(now()) @updatedAt
  asignatura            Asignatura        @relation(fields: [asignaturaId], references: [id])
  modeloEvaluativo      ModeloEvaluativo? @relation(fields: [modeloEvaluativoId], references: [id])
  varianteCurso         VarianteCurso     @relation(fields: [varianteCursoId], references: [id], onDelete: Cascade)

  @@index([asignaturaId], map: "asignaturas_en_variantes_curso_asignaturaId_fkey")
  @@index([varianteCursoId], map: "asignaturas_en_variantes_curso_varianteCursoId_fkey")
  @@index([modeloEvaluativoId], map: "asignaturas_en_variantes_curso_modeloEvaluativoId_fkey")
  @@map("asignaturas_en_variantes_curso")
}

model LugarEjecucion {
  id        String          @id @default(uuid())
  codigo    String?
  mallaId   String
  sedeId    String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now()) @updatedAt
  malla     MallaCurricular @relation(fields: [mallaId], references: [id], onDelete: Cascade)
  sede      Sede            @relation(fields: [sedeId], references: [id])

  @@index([sedeId], map: "lugares_ejecucion_sedeId_fkey")
  @@index([mallaId], map: "lugares_ejecucion_mallaId_fkey")
  @@map("lugares_ejecucion")
}

model Titulo {
  id        String   @id @default(uuid())
  nombre    String
  sedeId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  sede      Sede?    @relation(fields: [sedeId], references: [id])

  @@index([sedeId], map: "titulos_sedeId_fkey")
  @@map("titulos")
}

model UbicacionCursoEscuela {
  id             String       @id @default(uuid())
  nombre         String       @unique
  cursoEscuelaId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  cursoEscuela   CursoEscuela @relation(fields: [cursoEscuelaId], references: [id], onDelete: Cascade)

  @@index([cursoEscuelaId], map: "ubicaciones_curso_escuelas_cursoEscuelaId_fkey")
  @@map("ubicaciones_curso_escuelas")
}

model AdministrativoEnCursoEscuela {
  id               String         @id @default(uuid())
  cursoEscuelaId   String
  administrativoId String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  administrativo   Administrativo @relation(fields: [administrativoId], references: [id])
  cursoEscuela     CursoEscuela   @relation(fields: [cursoEscuelaId], references: [id], onDelete: Cascade)

  @@unique([cursoEscuelaId, administrativoId])
  @@index([administrativoId], map: "administrativos_curso_escuelas_administrativoId_fkey")
  @@map("administrativos_curso_escuelas")
}

model CursoEscuela {
  id                    String                         @id @default(uuid())
  nombre                String
  codigo                String?
  paraleloId            String
  sesionId              String
  tema                  String
  observaciones         String?
  departamento          String?
  fechaInicio           DateTime
  fechaFin              DateTime
  fechaLimiteRegistro   DateTime
  diasLimitePago        Int
  cupos                 Int?
  evaluaProfesor        Boolean
  matriculaConDeuda     Boolean
  legalizarMatriculas   Boolean
  registroExterno       Boolean
  registroInterno       Boolean
  verificaSesion        Boolean
  registroDesdeOtraSede Boolean
  edadMinima            Int?
  edadMaxima            Int?
  costoPorMateria       Boolean
  cumpleRequisitosMalla Boolean
  pasarRecord           Boolean
  plantillaId           String?
  createdAt             DateTime                       @default(now())
  updatedAt             DateTime                       @default(now()) @updatedAt
  estado                Boolean                        @default(true)
  periodoId             String
  responsables          AdministrativoEnCursoEscuela[]
  asignaturas           AsignaturaEnCursoEscuela[]
  paralelo              Paralelo                       @relation(fields: [paraleloId], references: [id])
  periodo               PeriodoLectivo                 @relation(fields: [periodoId], references: [id])
  plantilla             VarianteCurso?                 @relation(fields: [plantillaId], references: [id])
  sesion                Sesion                         @relation(fields: [sesionId], references: [id])
  ubicacionesEjecucion  UbicacionCursoEscuela[]

  @@index([paraleloId], map: "curso_escuelas_paraleloId_fkey")
  @@index([periodoId], map: "curso_escuelas_periodoId_fkey")
  @@index([plantillaId], map: "curso_escuelas_plantillaId_fkey")
  @@index([sesionId], map: "curso_escuelas_sesionId_fkey")
  @@map("curso_escuelas")
}

model AsignaturaEnCursoEscuela {
  id                    String            @id @default(uuid())
  validaCredito         Boolean
  validaPromedio        Boolean
  horasColaborativas    Float
  horasAsistidasDocente Float
  horasAutonomas        Float
  horasPracticas        Float
  sumaHoras             Boolean
  creditos              Float
  requeridoAprobar      Boolean
  asistenciaAprobar     Int?
  notaMaxima            Float?
  notaMinima            Float?
  cantidadDecimales     Int?
  asignaturaId          String
  cursoEscuelaId        String
  profesorId            String?
  modeloEvaluativoId    String?
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @default(now()) @updatedAt
  asignatura            Asignatura        @relation(fields: [asignaturaId], references: [id])
  cursoEscuela          CursoEscuela      @relation(fields: [cursoEscuelaId], references: [id], onDelete: Cascade)
  modeloEvaluativo      ModeloEvaluativo? @relation(fields: [modeloEvaluativoId], references: [id])
  profesor              Usuario?          @relation(fields: [profesorId], references: [id])

  @@index([asignaturaId], map: "asignatura_en_curso_escuela_asignaturaId_fkey")
  @@index([cursoEscuelaId], map: "asignatura_en_curso_escuela_cursoEscuelaId_fkey")
  @@index([modeloEvaluativoId], map: "asignatura_en_curso_escuela_modeloEvaluativoId_fkey")
  @@index([profesorId], map: "asignatura_en_curso_escuela_profesorId_fkey")
  @@map("asignatura_en_curso_escuela")
}

model Paralelo {
  id                String           @id @default(uuid())
  nombre            String
  orden             Int
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now()) @updatedAt
  cursoEscuelas     CursoEscuela[]
  nivelesAcademicos NivelAcademico[]

  @@map("paralelos")
}

model Curso {
  id        String          @id @default(uuid())
  estado    Boolean         @default(true)
  nombre    String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now()) @updatedAt
  variantes VarianteCurso[]

  @@map("cursos")
}

model VarianteCurso {
  id                      String                      @id @default(uuid())
  estado                  Boolean                     @default(false)
  nombre                  String
  codigoBase              String
  descripcion             String
  registroExterno         Boolean
  registroInterno         Boolean
  registroDesdeOtraSede   Boolean
  costoPorMateria         Boolean
  costoPorCantidadMateria Boolean
  verificaSesion          Boolean
  edadMinima              Int?
  edadMaxima              Int?
  cumpleRequisitosMalla   Boolean
  fechaAprobacion         DateTime
  pasarRecord             Boolean
  cursoId                 String
  createdAt               DateTime                    @default(now())
  updatedAt               DateTime                    @default(now()) @updatedAt
  asignaturas             AsignaturaEnVarianteCurso[]
  cursoEscuelas           CursoEscuela[]
  curso                   Curso                       @relation(fields: [cursoId], references: [id], onDelete: Cascade)

  @@index([cursoId], map: "variantes_de_cursos_cursoId_fkey")
  @@map("variantes_de_cursos")
}

model Competencia {
  id         String          @id @default(uuid())
  tipo       TipoCompetencia
  nombre     String
  programaId String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @default(now()) @updatedAt
  programa   Programa?       @relation(fields: [programaId], references: [id])

  @@index([programaId], map: "competencias_programaId_fkey")
  @@map("competencias")
}

model EjeFormativo {
  id                      String                   @id @default(uuid())
  nombre                  String
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @default(now()) @updatedAt
  asignaturasEnNivelMalla AsignaturaEnNivelMalla[]

  @@map("ejes_formativos")
}

model AreaConocimiento {
  id                       String                    @id @default(uuid())
  nombre                   String
  codigo                   String?
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @default(now()) @updatedAt
  asignaturasModuloEnMalla AsignaturaModuloEnMalla[]
  asignaturasEnNivelMalla  AsignaturaEnNivelMalla[]

  @@map("areas_de_conocimiento")
}

model CampoFormacion {
  id                       String                    @id @default(uuid())
  nombre                   String
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @default(now()) @updatedAt
  asignaturasModuloEnMalla AsignaturaModuloEnMalla[]
  asignaturasEnNivelMalla  AsignaturaEnNivelMalla[]

  @@map("campos_de_formacion")
}

model ModeloContrato {
  id             String   @id @default(uuid())
  estado         Boolean
  nombre         String
  descripcion    String
  paraProfesores Boolean
  archivoUrl     String   @db.Text
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt

  @@map("modelos_contrato")
}

model Modalidad {
  id        String            @id @default(uuid())
  nombre    String
  alias     String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt
  mallas    MallaCurricular[]

  @@map("modalidades")
}

model Turno {
  id                String             @id @default(uuid())
  estado            Boolean            @default(false)
  horas             Float
  comienza          DateTime           @db.Time(0)
  termina           DateTime           @db.Time(0)
  sesionId          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
  materiasEnHorario MateriaEnHorario[]
  sesion            Sesion             @relation(fields: [sesionId], references: [id])

  @@index([sesionId], map: "turnos_sesionId_fkey")
  @@map("turnos")
}

model AlternativaEvaluacion {
  id                     String                  @id @default(uuid())
  nombre                 String
  codigo                 String
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @default(now()) @updatedAt
  camposModeloEvaluativo CampoModeloEvaluativo[]

  @@map("alternativas_evaluacion")
}

model CampoModeloEvaluativo {
  id                      String                @id @default(uuid())
  codigo                  String
  ordenActa               Int
  notaMaxima              Float
  notaMinima              Float
  decimales               Int
  campoDependiente        Boolean
  actualizaEstado         Boolean
  actualizaEstadoNegativo Boolean
  determinaEstadoFinal    Boolean
  defineMaximos           Boolean
  alternativaId           String
  modeloEvaluativoId      String
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @default(now()) @updatedAt
  alternativa             AlternativaEvaluacion @relation(fields: [alternativaId], references: [id])
  modeloEvaluativo        ModeloEvaluativo      @relation(fields: [modeloEvaluativoId], references: [id])

  @@index([alternativaId], map: "campos_modelo_evaluativo_alternativaId_fkey")
  @@index([modeloEvaluativoId], map: "campos_modelo_evaluativo_modeloEvaluativoId_fkey")
  @@map("campos_modelo_evaluativo")
}

model ModeloEvaluativo {
  id                              String                      @id @default(uuid())
  estado                          Boolean                     @default(false)
  nombre                          String
  notaMaxima                      Float
  notaAprobatoria                 Float
  notaRecuperacion                Float
  porcentajeAsistenciaAprobatoria Int
  decimalesNotaFinal              Int
  defineMaximos                   Boolean
  camposActualizanEstado          Boolean
  observaciones                   String?
  createdAt                       DateTime                    @default(now())
  updatedAt                       DateTime                    @default(now()) @updatedAt
  asignaturasEnCursoEscuela       AsignaturaEnCursoEscuela[]
  asignaturasEnVarianteCurso      AsignaturaEnVarianteCurso[]
  campos                          CampoModeloEvaluativo[]
  materiasNivelesAcademicos       MateriaEnNivelAcademico[]
  nivelesAcademicos               NivelAcademico[]

  @@map("modelos_evaluativos")
}

model ModeloNivelacion {
  id                 String   @id @default(uuid())
  estado             Boolean  @default(false)
  nombre             String
  notaMaxima         Float
  notaAprobatoria    Float
  decimalesNotaFinal Int
  observaciones      String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt

  @@map("modelos_nivelacion")
}

model CampoProyectoIntegrador {
  id                   String             @id @default(uuid())
  nombre               String
  codigo               String
  observaciones        String?
  ordenActa            Int
  notaMaxima           Float
  notaMinima           Float
  decimales            Int
  campoDependiente     Boolean
  actualizaEstado      Boolean
  determinaEstadoFinal Boolean
  proyectoIntegradorId String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @default(now()) @updatedAt
  proyectoIntegrador   ProyectoIntegrador @relation(fields: [proyectoIntegradorId], references: [id])

  @@index([proyectoIntegradorId], map: "campos_proyectos_integradores_proyectoIntegradorId_fkey")
  @@map("campos_proyectos_integradores")
}

model ProyectoIntegrador {
  id                 String                    @id @default(uuid())
  estado             Boolean                   @default(false)
  nombre             String
  notaMaxima         Float
  notaAprobatoria    Float
  decimalesNotaFinal Int
  observaciones      String?
  createdAt          DateTime                  @default(now())
  updatedAt          DateTime                  @default(now()) @updatedAt
  campos             CampoProyectoIntegrador[]

  @@map("proyectos_integradores")
}

model Sesion {
  id                String           @id @default(uuid())
  estado            Boolean          @default(false)
  nombre            String
  alias             String
  sedeId            String
  lunes             Boolean
  martes            Boolean
  miercoles         Boolean
  jueves            Boolean
  viernes           Boolean
  sabado            Boolean
  domingo           Boolean
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now()) @updatedAt
  cursoEscuelas     CursoEscuela[]
  nivelesAcademicos NivelAcademico[]
  sede              Sede             @relation(fields: [sedeId], references: [id])
  turnos            Turno[]

  @@index([sedeId], map: "sesiones_sedeId_fkey")
  @@map("sesiones")
}

model Recurso {
  id        String   @id @default(uuid())
  nombre    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("recursos")
}

model MetodologiaAprendizaje {
  id        String   @id @default(uuid())
  nombre    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("metodologias_aprendizaje")
}

model PerfilPractica {
  id                        String                     @id @default(uuid())
  nombre                    String
  capacidades               String?
  resultados                String?
  actividades               String?
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @default(now()) @updatedAt
  perfilesPracticaProgramas PerfilPracticaEnPrograma[]

  @@map("perfiles_practica")
}

model PerfilPracticaEnPrograma {
  perfilPracticaId String
  programaId       String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  perfilPractica   PerfilPractica @relation(fields: [perfilPracticaId], references: [id])
  programa         Programa       @relation(fields: [programaId], references: [id])

  @@id([perfilPracticaId, programaId])
  @@index([programaId], map: "perfiles_practica_programas_programaId_fkey")
  @@map("perfiles_practica_programas")
}

model ProductoAcreditableEvaluacion {
  id        String   @id @default(uuid())
  nombre    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("productos_acreditables_evaluacion")
}

model TipoDocumento {
  id                String                    @id @default(uuid())
  nombre            String
  titulo            Boolean
  actaGrado         Boolean
  cedula            Boolean
  papeletaVotacion  Boolean
  carnetConadis     Boolean
  convalidacion     Boolean
  partidaNacimiento Boolean
  preNivelacion     Boolean
  serviciosBasicos  Boolean
  examenIngreso     Boolean
  paraPasantia      Boolean
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @default(now()) @updatedAt
  requisitos        RequisitoMatriculacion[]
  programas         TipoDocumentoEnPrograma[]

  @@map("tipos_documento")
}

model TipoDocumentoEnPrograma {
  id               String        @id @default(uuid())
  requeridoFisico  Boolean
  requeridoDigital Boolean
  tipoDocumentoId  String
  programaId       String
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now()) @updatedAt
  programa         Programa      @relation(fields: [programaId], references: [id])
  tipoDocumento    TipoDocumento @relation(fields: [tipoDocumentoId], references: [id])

  @@index([programaId], map: "tipo_documento_programa_programaId_fkey")
  @@index([tipoDocumentoId], map: "tipo_documento_programa_tipoDocumentoId_fkey")
  @@map("tipo_documento_programa")
}

model NivelTitulacion {
  id        String                   @id @default(uuid())
  nombre    String
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @default(now()) @updatedAt
  detalles  DetalleNivelTitulacion[]

  @@map("niveles_titulacion")
}

model DetalleNivelTitulacion {
  id                String          @id @default(uuid())
  nombre            String
  nivelTitulacionId String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @default(now()) @updatedAt
  nivelTitulacion   NivelTitulacion @relation(fields: [nivelTitulacionId], references: [id])
  programas         Programa[]

  @@index([nivelTitulacionId], map: "detalles_niveles_titucion_nivelTitulacionId_fkey")
  @@map("detalles_niveles_titucion")
}

model TituloObtenido {
  id                 String            @id @default(uuid())
  nombre             String
  programaId         String
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @default(now()) @updatedAt
  mallasCurriculares MallaCurricular[]
  nivelesMalla       NivelMalla[]
  programa           Programa          @relation(fields: [programaId], references: [id])

  @@index([programaId], map: "titulos_obtenidos_programaId_fkey")
  @@map("titulos_obtenidos")
}

model Coordinacion {
  id         String     @id @default(uuid())
  nombre     String
  alias      String
  sedeId     String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  sede       Sede       @relation(fields: [sedeId], references: [id])
  profesores Profesor[]
  programas  Programa[]

  @@index([sedeId], map: "coordinaciones_sedeId_fkey")
  @@map("coordinaciones")
}

model Programa {
  id                        String                     @id @default(uuid())
  estado                    Boolean                    @default(false)
  nombre                    String
  mencion                   String?
  alias                     String
  detalleNivelTitulacionId  String
  coordinacionId            String
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @default(now()) @updatedAt
  competencias              Competencia[]
  mallasCurriculares        MallaCurricular[]
  perfilesPracticaProgramas PerfilPracticaEnPrograma[]
  profesores                Profesor[]
  coordinacion              Coordinacion               @relation(fields: [coordinacionId], references: [id])
  detalleNivelTitulacion    DetalleNivelTitulacion     @relation(fields: [detalleNivelTitulacionId], references: [id])
  documentosRequeridos      TipoDocumentoEnPrograma[]
  titulosObtenidos          TituloObtenido[]

  @@index([coordinacionId], map: "programas_coordinacionId_fkey")
  @@index([detalleNivelTitulacionId], map: "programas_detalleNivelTitulacionId_fkey")
  @@map("programas")
}

model MateriaEnNivelAcademico {
  id                       String                   @id @default(uuid())
  estado                   Boolean                  @default(true)
  numero                   Int                      @unique @default(autoincrement())
  alias                    String?
  materiaExterna           Boolean                  @default(false)
  practicasPermitidas      Boolean                  @default(false)
  validaParaCreditos       Boolean
  validaParaPromedio       Boolean
  sumaHorasProfesor        Boolean                  @default(true)
  fechaInicio              DateTime
  fechaFin                 DateTime
  asignaturaEnNivelMallaId String?
  nivelAcademicoId         String
  asignaturaModuloId       String?
  modeloEvaluativoId       String
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime                 @default(now()) @updatedAt
  horario                  MateriaEnHorario[]
  asignaturaEnNivelMalla   AsignaturaEnNivelMalla?  @relation(fields: [asignaturaEnNivelMallaId], references: [id])
  asignaturaModulo         AsignaturaModuloEnMalla? @relation(fields: [asignaturaModuloId], references: [id])
  modeloEvaluativo         ModeloEvaluativo         @relation(fields: [modeloEvaluativoId], references: [id])
  nivelAcademico           NivelAcademico           @relation(fields: [nivelAcademicoId], references: [id], onDelete: Cascade)

  @@unique([nivelAcademicoId, asignaturaEnNivelMallaId])
  @@unique([nivelAcademicoId, asignaturaModuloId])
  @@index([numero])
  @@index([asignaturaEnNivelMallaId], map: "materias_niveles_academicos_asignaturaEnNivelMallaId_fkey")
  @@index([asignaturaModuloId], map: "materias_niveles_academicos_asignaturaModuloId_fkey")
  @@index([modeloEvaluativoId], map: "materias_niveles_academicos_modeloEvaluativoId_fkey")
  @@map("materias_niveles_academicos")
}

model NivelAcademico {
  id                                                   String                    @id @default(uuid())
  nombre                                               String?
  estado                                               Boolean                   @default(true)
  profesores                                           Boolean                   @default(true)
  horarios                                             Boolean                   @default(true)
  cuposMaterias                                        Boolean                   @default(true)
  planificacionProfesores                              Boolean                   @default(true)
  matriculacion                                        Boolean                   @default(false)
  fechaInicio                                          DateTime
  fechaFin                                             DateTime
  inicioAgregaciones                                   DateTime
  limiteAgregaciones                                   DateTime
  validaRequisitosMalla                                Boolean
  validaCumplimientoMaterias                           Boolean
  horasMinimasPracticasComunitarias                    Float?
  horasMinimasPracticasPreprofesionales                Float?
  estudiantesPuedenSeleccionarMaterias                 Boolean
  estudiantesPuedenSeleccionarMateriasOtrosHorarios    Boolean
  estudiantesPuedenSeleccionarMateriasOtrasModalidades Boolean
  estudiantesRegistranProyectosIntegradores            Boolean
  redireccionAPagos                                    Boolean
  limiteOrdinaria                                      DateTime
  limiteExtraordinaria                                 DateTime
  limiteEspecial                                       DateTime
  diasVencimientoMatricula                             Int
  capacidad                                            Int
  mensaje                                              String?
  terminosCondiciones                                  String?
  createdAt                                            DateTime                  @default(now())
  updatedAt                                            DateTime                  @default(now()) @updatedAt
  modeloEvaluativoId                                   String
  nivelMallaId                                         String
  paraleloId                                           String
  periodoId                                            String
  sesionId                                             String
  horario                                              MateriaEnHorario[]
  inscritos                                            Inscripcion[]
  materias                                             MateriaEnNivelAcademico[]
  modeloEvaluativo                                     ModeloEvaluativo          @relation(fields: [modeloEvaluativoId], references: [id])
  nivelMalla                                           NivelMalla                @relation(fields: [nivelMallaId], references: [id])
  paralelo                                             Paralelo                  @relation(fields: [paraleloId], references: [id])
  periodo                                              PeriodoLectivo            @relation(fields: [periodoId], references: [id])
  sesion                                               Sesion                    @relation(fields: [sesionId], references: [id])

  @@unique([paraleloId, nivelMallaId, sesionId, periodoId])
  @@index([modeloEvaluativoId], map: "niveles_academicos_modeloEvaluativoId_fkey")
  @@index([nivelMallaId], map: "niveles_academicos_nivelMallaId_fkey")
  @@index([periodoId], map: "niveles_academicos_periodoId_fkey")
  @@index([sesionId], map: "niveles_academicos_sesionId_fkey")
  @@map("niveles_academicos")
}

model MateriaEnHorario {
  id               String                  @id @default(uuid())
  dia              Dia
  fechaInicio      DateTime
  fechaFin         DateTime
  materiaId        String
  nivelAcademicoId String
  turnoId          String
  ubicacionId      String
  createdAt        DateTime                @default(now())
  updatedAt        DateTime                @default(now()) @updatedAt
  materia          MateriaEnNivelAcademico @relation(fields: [materiaId], references: [id], onDelete: Cascade)
  nivelAcademico   NivelAcademico          @relation(fields: [nivelAcademicoId], references: [id])
  turno            Turno                   @relation(fields: [turnoId], references: [id])
  ubicacion        Ubicacion               @relation(fields: [ubicacionId], references: [id])

  @@index([materiaId], map: "horarios_materiaId_fkey")
  @@index([nivelAcademicoId], map: "horarios_nivelAcademicoId_fkey")
  @@index([turnoId], map: "horarios_turnoId_fkey")
  @@index([ubicacionId], map: "horarios_ubicacionId_fkey")
  @@map("horarios")
}

model Ubicacion {
  id                String             @id @default(uuid())
  estado            Boolean            @default(true)
  nombre            String
  tipo              TipoUbicacion
  capacidad         Int
  entornoVirtual    Boolean
  sedeId            String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
  materiasEnHorario MateriaEnHorario[]
  sede              Sede               @relation(fields: [sedeId], references: [id])

  @@index([sedeId], map: "ubicaciones_sedeId_fkey")
  @@map("ubicaciones")
}

model Corte {
  id        String           @id @default(uuid())
  nombre    String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now()) @updatedAt
  periodos  PeriodoLectivo[]

  @@map("cortes")
}

model CalculoCosto {
  id                          String           @id @default(uuid())
  tipo                        TipoCalculoCosto
  costoPorSesion              Boolean?
  estudiantesEligenOpcionPago Boolean?
  cronogramaFechasOpcionPago  Boolean?
  createdAt                   DateTime         @default(now())
  updatedAt                   DateTime         @default(now()) @updatedAt
  periodos                    PeriodoLectivo[]

  @@map("calculos_costos")
}

model RequisitoMatriculacion {
  id               String         @id @default(uuid())
  obligatorio      Boolean
  transferenciaIES Boolean
  primeraMatricula Boolean
  repitenMaterias  Boolean
  descripcion      String?
  tipoDocumentoId  String
  periodoId        String
  nivelId          String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  nivel            NivelMalla     @relation(fields: [nivelId], references: [id], onDelete: Cascade)
  periodo          PeriodoLectivo @relation(fields: [periodoId], references: [id], onDelete: Cascade)
  tipoDocumento    TipoDocumento  @relation(fields: [tipoDocumentoId], references: [id])

  @@index([nivelId], map: "requisitos_matriculacion_nivelId_fkey")
  @@index([periodoId], map: "requisitos_matriculacion_periodoId_fkey")
  @@index([tipoDocumentoId], map: "requisitos_matriculacion_tipoDocumentoId_fkey")
  @@map("requisitos_matriculacion")
}

model CronogramaMatriculacion {
  id          String         @id @default(uuid())
  fechaInicio DateTime
  fechaFin    DateTime
  nivelId     String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  periodoId   String
  nivel       NivelMalla     @relation(fields: [nivelId], references: [id], onDelete: Cascade)
  periodo     PeriodoLectivo @relation(fields: [periodoId], references: [id], onDelete: Cascade)

  @@index([nivelId], map: "cronogramas_matriculacion_nivelId_fkey")
  @@index([periodoId], map: "cronogramas_matriculacion_periodoId_fkey")
  @@map("cronogramas_matriculacion")
}

model SubPeriodoLectivo {
  id          String         @id @default(uuid())
  nombre      String
  fechaInicio DateTime
  fechaFin    DateTime
  periodoId   String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  periodo     PeriodoLectivo @relation(fields: [periodoId], references: [id], onDelete: Cascade)

  @@index([periodoId], map: "sub_periodos_lectivos_periodoId_fkey")
  @@map("sub_periodos_lectivos")
}

model PeriodoLectivo {
  id                                           String                    @id @default(uuid())
  matriculas                                   Boolean                   @default(false)
  estado                                       Boolean                   @default(true)
  abierto                                      Boolean                   @default(true)
  nombre                                       String
  inicio                                       DateTime
  fin                                          DateTime
  limiteMatriculaOrdinaria                     DateTime?
  limiteMatriculaExtraordinaria                DateTime?
  limiteMatriculaEspecial                      DateTime?
  automatriculaAlumnosFechaExtraordinaria      Boolean?
  tipo                                         TipoPeriodo
  estudianteSeleccionaParaleloAutomatricula    Boolean?
  seImpartioNivelacion                         Boolean
  planificacionCargaHoraria                    Boolean
  planificacionProfesoresFormaTotal            Boolean?
  aprobacionPlanificacionProfesores            Boolean?
  cronogramaNotasCoordinacion                  Boolean
  legalizacionAutomaticaContraPagos            Boolean?
  puedenMatricularseArrastre                   Boolean
  puedenAutomatricularseSegundasOMasMatriculas Boolean
  numeroSecuencia                              Int?
  numeroMatriculaAutomatico                    Boolean?
  numeroMatricularAlLegalizar                  Boolean?
  actividadesDocencia                          Boolean                   @default(true)
  actividadesInvestigacion                     Boolean                   @default(true)
  actividadesGestion                           Boolean                   @default(true)
  actividadesPracticasComunitarias             Boolean                   @default(false)
  actividadesPracticasPreprofesionales         Boolean                   @default(false)
  otrasActividades                             Boolean                   @default(false)
  corteId                                      String?
  calculoCostoId                               String
  createdAt                                    DateTime                  @default(now())
  updatedAt                                    DateTime                  @default(now()) @updatedAt
  cronogramasMatriculacion                     CronogramaMatriculacion[]
  cursos                                       CursoEscuela[]
  nivelesAcademicos                            NivelAcademico[]
  calculoCosto                                 CalculoCosto              @relation(fields: [calculoCostoId], references: [id])
  corte                                        Corte?                    @relation(fields: [corteId], references: [id])
  requisitosMatriculacion                      RequisitoMatriculacion[]
  subPeriodos                                  SubPeriodoLectivo[]

  @@index([calculoCostoId], map: "periodos_lectivos_calculoCostoId_fkey")
  @@index([corteId], map: "periodos_lectivos_corteId_fkey")
  @@map("periodos_lectivos")
}

model CentroInformacion {
  id          String                         @id @default(uuid())
  nombre      String                         @unique
  createdAt   DateTime                       @default(now())
  updatedAt   DateTime                       @default(now()) @updatedAt
  estado      Boolean                        @default(true)
  alumnos     Alumno[]
  asesoresCrm AsesorCrmEnCentroInformacion[]

  @@map("centros_informacion")
}

model Grupo {
  nombre    String           @unique
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now()) @updatedAt
  id        String           @id @default(uuid())
  usuarios  UsuarioEnGrupo[]

  @@map("grupos")
}

model UsuarioEnGrupo {
  grupoId   String
  usuarioId String
  grupo     Grupo   @relation(fields: [grupoId], references: [id])
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  @@id([grupoId, usuarioId])
  @@index([usuarioId], map: "usuarios_en_grupos_usuarioId_fkey")
  @@map("usuarios_en_grupos")
}

model Inscripcion {
  id                    String         @id @default(uuid())
  matricula             Boolean        @default(true)
  matricularseConLimite Boolean        @default(false)
  alumnoId              String
  nivelAcademicoId      String
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @default(now()) @updatedAt
  alumno                Alumno         @relation(fields: [alumnoId], references: [id])
  nivelAcademico        NivelAcademico @relation(fields: [nivelAcademicoId], references: [id])

  @@unique([alumnoId, nivelAcademicoId])
  @@index([nivelAcademicoId], map: "inscripciones_nivelAcademicoId_fkey")
  @@map("inscripciones")
}

model Alumno {
  id                            String                     @id @default(uuid())
  estado                        EstadoAlumno               @default(ACTIVO)
  colegio                       String?
  especialidad                  String?
  fechaInscripcion              DateTime
  codigoPromocion               String?
  archivador                    String?
  comoNosConocio                ComoConocio
  razonesParaInscribirse        RazonInscripcion
  fechaExamenSNNA               DateTime?
  puntajeSNNA                   Float?
  titulo                        Boolean
  papeletaVotacion              Boolean
  copiaLicencia                 Boolean
  condicionado                  Boolean
  rindioExamenEgresoInstitucion Boolean
  actaGrado                     Boolean
  partidaNacimiento             Boolean
  certificadoAntecedentes       Boolean
  planillaServicioBasico        Boolean
  transferenciaOtraIES          Boolean
  certificadoEstudios           Boolean
  documentosHomologacion        Boolean
  certificadoSanguineo          Boolean
  silabos                       Boolean
  cedula                        Boolean
  fotos                         Boolean
  certificadoSalud              Boolean
  transcript                    Boolean
  observaciones                 String?
  usuarioId                     String                     @unique
  centroInformacionId           String
  asesorCrmId                   String
  createdAt                     DateTime                   @default(now())
  updatedAt                     DateTime                   @default(now()) @updatedAt
  asesorCrm                     AsesorCrm                  @relation(fields: [asesorCrmId], references: [id])
  centroInformacion             CentroInformacion          @relation(fields: [centroInformacionId], references: [id])
  usuario                       Usuario                    @relation(fields: [usuarioId], references: [id])
  asesores                      AsesorEstudianteEnAlumno[]
  inscripciones                 Inscripcion[]

  @@index([asesorCrmId], map: "alumnos_asesorCrmId_fkey")
  @@index([centroInformacionId], map: "alumnos_centroInformacionId_fkey")
  @@map("alumnos")
}

model ResponsableCrm {
  id               String         @id @default(uuid())
  estado           Boolean        @default(true)
  administrativoId String         @unique
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  administrativo   Administrativo @relation(fields: [administrativoId], references: [id])

  @@map("responsables_crm")
}

model AsesorEstudianteEnAlumno {
  id                    String           @id @default(uuid())
  seguimientoBienestar  Boolean
  seguimientoExpediente Boolean
  asesorEstudianteId    String
  alumnoId              String
  alumno                Alumno           @relation(fields: [alumnoId], references: [id])
  asesorEstudiante      AsesorEstudiante @relation(fields: [asesorEstudianteId], references: [id])

  @@unique([asesorEstudianteId, alumnoId])
  @@index([alumnoId], map: "asesores_estudiantes_alumnos_alumnoId_fkey")
  @@map("asesores_estudiantes_alumnos")
}

model AsesorEstudiante {
  id                    String                          @id @default(uuid())
  estado                Boolean                         @default(true)
  seguimientoBienestar  Boolean
  seguimientoExpediente Boolean
  administrativoId      String                          @unique
  createdAt             DateTime                        @default(now())
  updatedAt             DateTime                        @default(now()) @updatedAt
  administrativo        Administrativo                  @relation(fields: [administrativoId], references: [id])
  estudiantes           AsesorEstudianteEnAlumno[]
  responsables          ResponsableEnAsesorEstudiante[]

  @@map("asesores_estudiantes")
}

model ResponsableEnAsesorEstudiante {
  id                 String                      @id @default(uuid())
  responsableId      String
  asesorEstudianteId String
  createdAt          DateTime                    @default(now())
  updatedAt          DateTime                    @default(now()) @updatedAt
  asesorEstudiante   AsesorEstudiante            @relation(fields: [asesorEstudianteId], references: [id])
  responsable        ResponsableAsesorEstudiante @relation(fields: [responsableId], references: [id])

  @@unique([responsableId, asesorEstudianteId])
  @@index([asesorEstudianteId], map: "responsable_en_asesores_estudiantes_asesorEstudianteId_fkey")
  @@map("responsable_en_asesores_estudiantes")
}

model ResponsableAsesorEstudiante {
  id                    String                          @id @default(uuid())
  seguimientoBienestar  Boolean
  seguimientoExpediente Boolean
  createdAt             DateTime                        @default(now())
  updatedAt             DateTime                        @default(now()) @updatedAt
  asesores              ResponsableEnAsesorEstudiante[]

  @@map("responsables_asesores_estudiantes")
}

model AsesorCrm {
  id                 String                         @id @default(uuid())
  administrativoId   String                         @unique
  createdAt          DateTime                       @default(now())
  updatedAt          DateTime                       @default(now()) @updatedAt
  inscritos          Alumno[]
  centrosInformacion AsesorCrmEnCentroInformacion[]
  administrativo     Administrativo                 @relation(fields: [administrativoId], references: [id])

  @@map("asesores_crm")
}

model AsesorCrmEnCentroInformacion {
  id                  String            @id @default(uuid())
  asesorId            String
  centroInformacionId String
  asesor              AsesorCrm         @relation(fields: [asesorId], references: [id])
  centroInformacion   CentroInformacion @relation(fields: [centroInformacionId], references: [id])

  @@unique([asesorId, centroInformacionId])
  @@index([centroInformacionId], map: "asesores_centros_informacion_centroInformacionId_fkey")
  @@map("asesores_centros_informacion")
}

model Administrativo {
  id                     String                         @id @default(uuid())
  estado                 Boolean                        @default(true)
  parametrosInstitucion  Boolean                        @default(false)
  talentoHumano          Boolean                        @default(false)
  personalAdministrativo Boolean                        @default(false)
  profesores             Boolean                        @default(false)
  periodosLectivos       Boolean                        @default(false)
  asignaturas            Boolean                        @default(false)
  modelosEvaluativos     Boolean                        @default(false)
  crmPreinscritos        Boolean                        @default(false)
  sedeId                 String
  usuarioId              String                         @unique
  createdAt              DateTime                       @default(now())
  updatedAt              DateTime                       @default(now()) @updatedAt
  sede                   Sede                           @relation(fields: [sedeId], references: [id])
  usuario                Usuario                        @relation(fields: [usuarioId], references: [id])
  cursosResponsable      AdministrativoEnCursoEscuela[]
  asesorCrm              AsesorCrm?
  asesorEstudiante       AsesorEstudiante?
  responsableCrm         ResponsableCrm?

  @@index([sedeId], map: "administrativos_sedeId_fkey")
  @@map("administrativos")
}

model Profesor {
  id               String           @id @default(uuid())
  estado           Boolean          @default(true)
  tiempoDedicacion TiempoDedicacion
  categoria        TipoCategoria
  coordinacionId   String
  programaId       String?
  usuarioId        String           @unique
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now()) @updatedAt
  coordinacion     Coordinacion     @relation(fields: [coordinacionId], references: [id])
  programa         Programa?        @relation(fields: [programaId], references: [id])
  usuario          Usuario          @relation(fields: [usuarioId], references: [id])

  @@index([coordinacionId], map: "profesores_coordinacionId_fkey")
  @@index([programaId], map: "profesores_programaId_fkey")
  @@map("profesores")
}

model Usuario {
  id                         String                     @id @default(uuid())
  name                       String?
  email                      String?                    @unique
  emailVerified              DateTime?
  image                      String?                    @db.Text
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @default(now()) @updatedAt
  callePrincipal             String?
  calleSecundaria            String?
  cantonNacimiento           String?
  cedula                     String?
  correoElectronico          String?
  correoInstitucional        String?                    @unique
  estado                     Boolean                    @default(true)
  estadoCivil                EstadoCivil?
  etnia                      Etnia?
  fechaNacimiento            DateTime
  genero                     Genero?
  nacionalidad               String?
  nombres                    String
  numeroDomicilio            String?
  paisNacimiento             String?
  paisResidencia             String?
  parroquiaNacimiento        String?
  pasaporte                  String?
  primerApellido             String
  provinciaDondeSufraga      String?
  provinciaNacimiento        String?
  segundoApellido            String?
  sexo                       Sexo
  telefonoFijo               String?
  telefonoMovil              String?
  tipoSangre                 String?
  tipo                       TipoUsuario
  accounts                   Account[]
  administrativo             Administrativo?
  alumno                     Alumno?
  asignaturasEnCursoEscuelas AsignaturaEnCursoEscuela[]
  profesor                   Profesor?
  sessions                   Session[]
  grupos                     UsuarioEnGrupo[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  expires_in        Int?
  ext_expires_in    Int?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt
  user              Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "accounts_userId_fkey")
  @@map("accounts")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "sessions_userId_fkey")
  @@map("sessions")
}

enum TipoDuracion {
  HORAS
  SEMESTRES
  CREDITOS
  ANOS

  @@map("tipo_duracion")
}

enum TipoCompetencia {
  ESPECIFICA
  GENERICA

  @@map("tipo_competencia")
}

enum TipoAsignatura {
  PRACTICA
  TEORICA
  TEORICA_PRACTICA

  @@map("tipo_asignatura")
}

enum TipoUbicacion {
  AULA
  LABORATORIO
  TALLER
  SALON

  @@map("tipo_ubicacion")
}

enum Dia {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO

  @@map("dia")
}

enum TipoPeriodo {
  GRADO
  POSGRADO

  @@map("tipo_periodo")
}

enum TipoCalculoCosto {
  COSTO_POR_NIVEL_Y_MATERIAS
  COSTO_POR_PLAN_CUOTA

  @@map("tipo_calculo_costo")
}

enum Sexo {
  HOMBRE
  MUJER

  @@map("sexo")
}

enum Genero {
  FEMENINO
  MASCULINO

  @@map("genero")
}

enum Etnia {
  AFROECUATORIANO
  BLANCO
  INDIGENA
  MESTIZO
  MONTUVIO
  MULATO
  NEGRO
  OTRO

  @@map("etnia")
}

enum EstadoCivil {
  SOLTERO
  CASADO
  DIVORCIADO
  UNION_LIBRE
  UNION_DE_HECHO
  VIUDO

  @@map("estado_civil")
}

enum EstadoAlumno {
  ACTIVO
  EGRESADO
  RETIRADO

  @@map("estado_alumno")
}

enum ComoConocio {
  FACEBOOK
  INSTAGRAM
  OTROS_MEDIOS
  PERIODICO
  PUBLICIDAD_FISICA
  RADIO
  REDES_SOCIALES
  TELEVISION
  TIKTOK
  TWITTER
  UN_AMIGO_ESTUDIO_AQUI
  UN_FAMILIAR_ESTUDIO_AQUI
  VISITAS_A_COLEGIOS

  @@map("como_conocio")
}

enum RazonInscripcion {
  AMIGOS
  CARRERAS
  HORARIOS
  INSTALACIONES
  MENCIONES

  @@map("razon_inscripcion")
}

enum TiempoDedicacion {
  TIEMPO_COMPLETO
  TIEMPO_PARCIAL
  MEDIO_TIEMPO

  @@map("tiempo_dedicacion")
}

enum TipoCategoria {
  HONORARIO
  INVITADO
  OCASIONAL
  TITULAR_AGREGADO
  TITULAR_AUXILIAR
  TITULAR_PRINCIPAL

  @@map("tipo_categoria")
}

enum TipoUsuario {
  PROFESOR
  ADMINISTRATIVO
  ALUMNO

  @@map("tipo_usuario")
}
