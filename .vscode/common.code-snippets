{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Return ErrorHandler": {
		"prefix": ["errhand", "eh"],
		"body": ["return ErrorHandler.handle({ ctx, error })"],
		"description": "Create a Return ErroHandler.",
		"scope": "typescript"
	},
	"Return Body Validation Error": {
		"prefix": ["bval"],
		"body": [
			"	if (!bodyVal.success) {",
			"		return {",
			"			jsonBody: {",
			"				message: 'Peticion invalida',",
			"			},",
			"			status: 400,",
			"		};",
			"	}"
		],
		"description": "Create a Return Body Validation Error",
		"scope": "typescript"
	},
	"Return ID existence Error": {
		"prefix": ["iderr"],
		"body": [
			"	if (!id) {",
			"	return {",
			"		jsonBody: {",
			"			message: 'El ID es invalido o no ha sido proporcionado',",
			"		},",
			"		status: 400,",
			"	};",
			"	}"
		],
		"description": "Create a Return ID existence Error",
		"scope": "typescript"
	}
}
