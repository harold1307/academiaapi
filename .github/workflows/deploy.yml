name: Deploy Dev App to Azure Functions

on: workflow_dispatch

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: "tecdu-api-dev" # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "." # set this to the path to your function app project, defaults to the repository root
  NODE_VERSION: "18.x" # set this to the node version to use (e.g. '8.x', '10.x', '12.x')

jobs:
  build-and-deploy-dev:
    runs-on: windows-latest
    if: github.ref == 'refs/heads/dev'
    env:
      AZURE_FUNCTIONAPP_NAME: "tecdu-api" # set this to your function app name on Azure
      AZURE_FUNCTIONAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_DEV }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
      SHADOW_DATABASE_URL_DEV: ${{ secrets.SHADOW_DATABASE_URL_DEV }}
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --config.node-linker=hoisted

      - name: "Create env file"
        run: |
          touch .env
          echo DATABASE_URL="${{ secrets.DATABASE_URL_DEV }}" >> .env
          echo SHADOW_DATABASE_URL_DEV=${{ secrets.SHADOW_DATABASE_URL_DEV }} >> .env
          cat .env

      - name: Apply all pending migrations to the database
        run: pnpm dlx prisma migrate deploy

      - name: Resolve Project Dependencies Using pnpm
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          pnpm --if-present run build
          pnpm --if-present run test
          popd

      - name: debug
        shell: pwsh
        run: ls

      - name: Run prune
        run: pnpm prune --production --config.ignore-scripts=true

      - name: Run Azure Functions Action
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ env.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          slot-name: dev
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
